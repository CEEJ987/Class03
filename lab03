# Class 03 Reading Notes

# [Class 03 Lab](https://github.com/CEEJ987/Class03)

## References

<https://blog.udemy.com/git-tutorial-a-comprehensive-guide/>

### The Significance of Git

 The importantance of learning more about this because I want to learn how to use Git. Knowing its a major factor and will be useful in my career.

## Notes

**Version control** is being able to go back to the past versions of any program(s) in order to fix things or revert them.

**Local Version Control** **(LVC)** is the same way, just for the local.
**Centralized Version Control** **(CVC)** is the collaboration between others where all versions are stored on a server database.
**Distributed Version Control** **(DVCS)** is a duplicated repository, a backup, which can be implemented into the CVS to update it if its necessary. 

### Git
**Git** is a DVCS, which stores files in data as snapshots, once changes are made you can **commit to change**. If the file has not changed, Git only stores a reference to the already-stored identical version of it. 

Git mostly relies on local operaitons, allowing offline work be more collaborative
- Tracks every change
- Helps prevent loss of data

#### Stages of Git

- **Committed** - Securely stored in local database
- **Modified** - File has been edited, just not sent
- **Staged** - File has been sent to be changed in the next version

### Making a Git

Making a git can be done from the terminal

## **Git Commands**

- git init (creates git repo)
- git clone (Clones a repo)
- git status (Status of current repo)
- git add filename (tracks only one file) (File will be tracked and staged)
- git add * (tracks all file names) (files will be tracked and staged)
- git commit -m "yatayata"(commits your work, leaves message for file)
- git commit -a (commits all)
- git push origin master (pushes code to one copy of repo to the other)
- git stash (hides all changes, clean slate)
- git stash apply (comes back)

**When cloning repos, Git will give the original repo the name origin, and your copy is becoming the master**

### Things I want to learn more about!

I want to learn how to fully master git, learning how to navigate without logging into desktop

I aslo want to learn how to properly manage my inputs submitted inside of git.
